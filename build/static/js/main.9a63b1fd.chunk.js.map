{"version":3,"sources":["images/Me.jpg","images sync /^/.*/.jpg$","images/Conway'sGameofLife.jpg","images/Don'tSendThatEmail.jpg","images/InstaClone.jpg","images/LambdaNotes.jpg","images/blue-background.jpg","components/project.js","components/icon.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./Conway'sGameofLife.jpg","./Don'tSendThatEmail.jpg","./InstaClone.jpg","./LambdaNotes.jpg","./Me.jpg","./blue-background.jpg","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","Project","props","react_default","a","createElement","className","href","link","target","rel","src","require","concat","project","alt","description","Icon","index_es","icon","myIcon","library","add","fab","faEnvelope","App","Me","components_project","components_icon","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a63b1fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Me.3f9d4909.jpg\";","var map = {\n\t\"./Conway'sGameofLife.jpg\": 24,\n\t\"./Don'tSendThatEmail.jpg\": 25,\n\t\"./InstaClone.jpg\": 26,\n\t\"./LambdaNotes.jpg\": 27,\n\t\"./Me.jpg\": 4,\n\t\"./blue-background.jpg\": 28\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/Conway'sGameofLife.749e7c53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Don'tSendThatEmail.3a9fadda.jpg\";","module.exports = __webpack_public_path__ + \"static/media/InstaClone.f6233c43.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LambdaNotes.2b94b365.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blue-background.e88312cd.jpg\";","import React from \"react\";\r\nimport \"./project.css\";\r\n\r\nconst Project = props => {\r\n  return (\r\n    <a\r\n      className=\"projectCard\"\r\n      href={props.link}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <img\r\n        className=\"projectImage\"\r\n        src={require(`../images/${props.project}.jpg`)}\r\n        alt={props.project}\r\n      />\r\n      <p className=\"description\">{props.description}</p>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./icon.css\";\r\n\r\nconst Icon = props => {\r\n  return (\r\n    <a\r\n      className=\"icon\"\r\n      href={props.link}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <FontAwesomeIcon icon={props.myIcon} />\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Project from \"./components/project\";\nimport Icon from './components/icon';\nimport Me from \"./images/Me.jpg\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(fab, faEnvelope);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"intro\">\n          <img className=\"myPicture show\" src={Me} alt=\"me\" />\n          <h1 className=\"show\">Hi, I'm Fred, a software developer. </h1>\n        </div>\n        <div className=\"projectSection\">\n          <h1 className=\"projectTitle\">Projects</h1>\n          <div className=\"projects\">\n            <Project \n              project=\"Don'tSendThatEmail\"\n              link=\"https://www.dontsendthatemail.app/\"\n              description=\"Lets users analyze their emails for emotion using IBM Watson\"\n            />\n            <Project \n              project=\"InstaClone\"\n              link=\"https://fron12.github.io/React-Insta-Clone/\"\n              description=\"A fake Instagram page with a search filter, like increment, and comment function\"\n            />\n            <Project \n              project=\"LambdaNotes\"\n              description=\"A note taking app in which users can create, edit, and delete notes\"\n            />\n            <Project \n              project=\"Conway'sGameofLife\"\n              link=\"https://fron12.github.io/Conways-Life/\"\n              description=\"An app that demonstrates Conway's Game of Life\"\n            />\n          </div>\n        </div>\n        <div className=\"contact\">\n          <h1>Contact</h1>\n          <div className=\"contactIcons\">\n            <span><strong>sohnf112040@gmail.com</strong></span>\n            <Icon className=\"fa-linkedin\" myIcon={[\"fab\", \"linkedin\"]} link=\"https://www.linkedin.com/in/fred-sohn/\" />\n            <Icon className=\"fa-github\" myIcon={[\"fab\", \"github\"]} link=\"https://github.com/fron12\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}